import Head from "next/head";
import Card from "../components/Card/Card";
import { useState } from "react";
import { useSelector, useDispatch } from "react-redux";
import { getCharactersData } from "../state/actions/charactersActions";
import styles from "@/styles/Home.module.css";
import { useQuery } from "react-query";
import Loading from "@/components/loading/Loading";
import SideBar from "@/components/SideBar/SideBar";
import { BsMoonStarsFill, BsFillSunFill } from "react-icons/bs";

export default function Home() {
  const charactersData = useSelector(
    (state: any) => state?.characters?.charactersData
  );

  const dispatch = useDispatch();
  const [page, setPage] = useState(1);

  const fetchCharacters = async (page) => {
    const res = await fetch(
      `https://rickandmortyapi.com/api/character?page=${page}`
    );
    return res.json();
  };

  const { isLoading, isError, error, data, isFetching } = useQuery(
    ["Characters", page],
    () => fetchCharacters(page),
    { keepPreviousData: true }
  );

  console.log(data);
  if (isLoading) return <Loading />;

  //if (error) return 'An error has occurred: ' + error.message
  return (
    <>
      <Head children={undefined}>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="center-container">
        <SideBar />

        <div className="main">
          <div className="main-header">
            <h2>Personagens</h2>
            <div id="darkmode">
              <input type="checkbox" className="checkbox" id="checkbox" />
              <label htmlFor="checkbox" className="label">
                <BsMoonStarsFill color="white" />
                <BsFillSunFill color="yellow" />
                <div className="ball"></div>
              </label>
            </div>
          </div>
          {!data.results && data.results == undefined ? (
            <>
              <span>Loading</span>
            </>
          ) : (
            data.results.map(
              (c: { id: number; image: string; name: string }) => (
                <Card img={c.image} name={c.name} id={c.id} />
              )
            )
          )}
          <div className="nav btn-container">
            <button
              onClick={() => setPage((prevState) => Math.max(prevState - 1, 0))}
              disabled={page === 1}
            >
              Prev Page
            </button>

            <button
              onClick={() => setPage((prevState) => prevState + 1)}
              disabled={page === data.info.pages}
            >
              Next Page
            </button>
          </div>
        </div>
      </div>
    </>
  );
}
